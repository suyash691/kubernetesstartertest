name: Build and Deploy node Express app to container
on:
  push:
    branches:
      - master

env:
  APPNAME: "fnappdevopsstartertest"
  APPLICATIONPATH: "Application"
  RESOURCEGROUPNAME: "susaluj-devops-existingaks"
  LOCATION: "South Central US"
  HOSTINGPLAN: "Basic"
  STORAGEACCOUNTNAME: "testsanforfnapp"
  APPINSIGHTSLOCATION: "South Central US"
  PYTHON_VERSION: '3.7.5'

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # login to azure
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Use Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Dependancies
      continue-on-error: false
      run: |
        pushd './${{ env.APPLICATIONPATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd
    - name: Pytest
      continue-on-error: false
      run: |
        mkdir testresults
        pip install pytest && pip install -r ./${{ env.APPLICATIONPATH }}/requirements.txt && pytest Tests/test_unit.py --junitxml=./testresults/test-results.xml && pip install pycmd && py.cleanup Tests/
    # Uploading unit test results to artifact store
    - name: Upload unit test results to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: UnitTestResults
        path: ./testresults/test-results.xml
    - name: Make directories for artifact upload
      continue-on-error: false
      run: |
        mkdir buildartifacts
        mkdir deploymenttemplates
    # Archive build artifact
    - name: Archive Application
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./buildartifacts/Application.zip ./${{ env.APPLICATIONPATH }}
    # Uploading application to artifact store
    - name: Upload Application to Build Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: buildartifacts
        path: buildartifacts
    # Archive Arm template
    - name: Archive ArmTemplates
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./deploymenttemplates/ArmTemplates.zip ./ArmTemplates
    # Uploading Arm Template to artifact store
    - name: Upload Arm templates to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: deploymenttemplates
        path: deploymenttemplates
    
 
  deploy:
    name: Deploy application to AKS
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # login to azure
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: buildartifacts
        path: buildartifacts
    - name: Unzipping Build Artifact
      uses: montudor/action-zip@v0.1.0
      with:
       args: unzip -qq ./buildartifacts/Application.zip -d .
    - name: Download Arm Template
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: deploymenttemplates
        path: deploymenttemplates
    - name: Unzipping ARM template
      uses: montudor/action-zip@v0.1.0
      with:
       args: unzip -qq ./deploymenttemplates/ArmTemplates.zip -d .
    - name: Deploy ARM Template
      uses: azure/CLI@v1
      continue-on-error: false
      with:
        inlineScript: |
          az group create --name "${{ env.RESOURCEGROUPNAME }}" --location "${{ env.LOCATION }}"
          az deployment group create --resource-group "${{ env.RESOURCEGROUPNAME }}" --template-file ./ArmTemplates/python-functionapp-template-consumption.json --parameters functionAppName="${{ env.APPNAME }}" hostingPlanName="${{ env.HOSTINGPLANNAME }}" appInsightsLocation="${{ env.APPINSIGHTSLOCATION }}" storageAccountName="${{ env.STORAGEACCOUNTNAME }}"
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.APPNAME }}
        package: ${{ env.APPLICATIONPATH }}
